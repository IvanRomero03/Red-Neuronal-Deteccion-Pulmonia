# -*- coding: utf-8 -*-
"""Ejecutable.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_QkUaWg_28LFQnDa8IX__fRjcfZ3ELXu
"""

#ESTE PROGRAMA DEPENDE DE LOS ARCHIVOS "modelo.h5" y "imagen.jpg" DEBEN TENER ESTE NOMBRE
import numpy as np
import matplotlib.pyplot as plt
import statistics
import tensorflow as tf
import tensorflow.keras as ks
import cv2
import os

os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'
Modelo = tf.keras.models.load_model('modelo.h5')

# Leer una imagen y convertirla a una matriz
def leer_imagen(ruta):
    img = cv2.imread(ruta, cv2.IMREAD_GRAYSCALE)
    img = cv2.resize(img, (480,720))
    vimg = []
    for lista in img:
      vimg.append(lista)
    vimg = np.array(vimg)
    return vimg
# Iterar por una carpeta de imagenes y retornar una lista de rutas
def iterar_imagenes(ruta):
    lista = []
    for root, dirs, files in os.walk(ruta):
        for file in files:
            if file.endswith(".jpeg"):
                lista.append(os.path.join(root, file))
    return lista
def leerImagenes():

    rutaPredict = "imagen.jpeg"
    ImagenInput = leer_imagen(rutaPredict)
    
    return ImagenInput

Imagen = leerImagenes()

Resultado = Modelo.predict(np.array([Imagen]))

#Graficar Resultado
#figsize = ()
dicc = ("Normal", "Pulmon√≠a")

f = plt.figure()
plt.subplot(1,2,1)
plt.imshow(Imagen,cmap='gray')
plt.subplot(1,2,2)
plt.bar(Resultado[0],1)
plt.xlabel("Resultado:\n" + dicc[round(Resultado[0][0])])

